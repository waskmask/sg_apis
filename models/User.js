const mongoose = require("mongoose");

const UserSchema = new mongoose.Schema(
  {
    email: {
      type: String,
      required: true,
      unique: true,
    },
    password: {
      type: String,
      required: true,
    },
    username: {
      type: String,
      unique: true,
    },
    dob: {
      type: Date,
      required: true,
    },
    gender: {
      type: String,
      required: true,
      enum: ["male", "female"],
    },
    searching_for: {
      type: String,
      enum: ["sugar_baby", "sugar_mommy", "sugar_daddy", "sugar_boy"],
    },
    location: {
      type: {
        type: String,
        enum: ["Point"],
      },
      coordinates: {
        type: [Number],
      },
      city: {
        type: String,
      },
      country: {
        type: String,
      },
    },
    looking_for: {
      type: [String],
      enum: [
        "sugar_relationship",
        "casual_dating",
        "dating",
        "one_night_stand",
        "online_chat",
        "friendship",
        "serious_relationship",
        "travel_partner",
        "friends_with_benefits",
        "sugar_friendship",
      ],
    },
    interests: {
      type: [String],
      enum: [
        "music",
        "sports",
        "travel",
        "food",
        "movies",
        "books",
        "art",
        "fashion",
        "photography",
        "gaming",
        "fitness",
        "cooking",
        "dancing",
        "hiking",
        "camping",
        "fishing",
        "hunting",
        "swimming",
        "yoga",
        "meditation",
        "gardening",
        "animals",
        "nature",
        "technology",
        "science",
        "politics",
        "history",
        "culture",
        "religion",
        "philosophy",
        "psychology",
        "education",
        "business",
        "finance",
        "marketing",
        "sales",
        "engineering",
        "medicine",
        "law",
        "design",
        "architecture",
        "journalism",
        "writing",
        "acting",
        "drama",
        "comedy",
        "horror",
        "thriller",
        "romance",
        "fantasy",
        "sci-fi",
        "mystery",
        "documentary",
        "animation",
        "superhero",
        "western",
        "war",
        "crime",
        "adventure",
        "action",
        "musical",
        "biography",
        "sports",
        "history",
        "science",
        "nature",
        "technology",
        "culture",
        "religion",
        "philosophy",
        "psychology",
        "education",
        "business",
        "finance",
        "marketing",
        "sales",
        "engineering",
        "medicine",
        "law",
        "design",
        "architecture",
        "journalism",
        "writing",
        "acting",
        "drama",
        "comedy",
        "horror",
        "thriller",
        "romance",
        "fantasy",
        "sci-fi",
        "mystery",
        "documentary",
        "animation",
        "superhero",
        "western",
        "war",
        "crime",
        "adventure",
        "action",
        "musical",
        "biography",
        "sports",
        "history",
        "science",
        "nature",
        "technology",
        "culture",
        "religion",
        "philosophy",
        "psychology",
        "education",
        "business",
        "finance",
        "marketing",
        "sales",
        "engineering",
        "medicine",
        "law",
        "design",
        "architecture",
        "journalism",
        "writing",
        "acting",
        "drama",
        "comedy",
        "horror",
        "thriller",
        "romance",
        "fantasy",
        "sci-fi",
        "mystery",
        "documentary",
        "animation",
        "superhero",
        "western",
        "war",
        "crime",
        "adventure",
        "action",
        "musical",
        "biography",
        "sports",
        "history",
      ],
    },
    languages: {
      type: [String],
    },
    smoking: {
      type: String,
      enum: ["yes", "no", "sometimes"],
    },
    children: {
      type: String,
      enum: ["yes", "no", "maybe"],
    },
    body_shape: {
      type: String,
      enum: ["slim", "average", "athletic", "curvy", "overweight"],
    },
    ethnicity: {
      type: String,
      enum: [
        "white",
        "black",
        "asian",
        "caucasian",
        "latino",
        "middle_eastern",
        "mixed",
        "other",
      ],
    },
    hair_color: {
      type: String,
      enum: ["black", "brown", "blonde", "red", "gray", "white", "bald"],
    },
    eye_color: {
      type: String,
      enum: ["black", "brown", "blue", "green", "gray", "hazel", "other"],
    },
    profession: {
      type: String,
      enum: ["student", "unemployed", "employed", "self_employed", "other"],
    },
    height: {
      type: Number,
    },
    is_diamond: {
      type: Boolean,
      expiry: {
        type: Date,
      },
    },
    monthly_budget: {
      type: Number,
    },
    email_verified: {
      type: Boolean,
      default: false,
    },
    emailVerificationCode: {
      type: String,
    },
    resetPasswordCode: {
      type: String,
    },
    found_at: {
      type: String,
    },
    prelaunch: {
      type: Boolean,
      default: false,
    },
    last_seen: {
      type: Date,
    },
  },
  {
    timestamps: true,
  }
);

UserSchema.index({ location: "2dsphere" });

module.exports = mongoose.model("User", UserSchema);
